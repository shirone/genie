import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id "com.moowork.node" version "0.12"
}

dependencies {
    /*******************************
     * Compile Dependencies
     *******************************/

    compile(project(":genie-core"))

    // Commons
    compile("org.apache.commons:commons-exec:${commons_exec_version}")
    compile("org.apache.httpcomponents:httpclient")

    // Thymeleaf Extras for Spring Security
    compile("org.thymeleaf.extras:thymeleaf-extras-springsecurity4")

    // Spring Libs
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-mail")
    compile("org.springframework.boot:spring-boot-starter-hateoas")
    compile("org.springframework.boot:spring-boot-starter-redis")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.springframework.boot:spring-boot-starter-tomcat")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.cloud:spring-cloud-cluster-autoconfigure:${spring_cloud_cluster_version}")
    compile("org.springframework.cloud:spring-cloud-cluster-zookeeper:${spring_cloud_cluster_version}")
    compile("org.springframework.cloud:spring-cloud-starter-eureka:${spring_cloud_netflix_version}")
    compile("org.springframework.cloud:spring-cloud-starter-spectator:${spring_cloud_netflix_version}")
    compile("org.springframework.security.extensions:spring-security-saml2-core:${spring_security_saml_version}") {
        exclude group: "org.bouncycastle", module: "bcprov-jdk15"
    }
    compile("org.springframework.security.oauth:spring-security-oauth2")
    compile("org.springframework.session:spring-session")

    // Swagger libs
    compile("io.springfox:springfox-swagger2:${springfox_version}")
    compile("io.springfox:springfox-swagger-ui:${springfox_version}")
    compile("io.springfox:springfox-bean-validators:${springfox_version}")

    /*******************************
     * Provided Dependencies
     *******************************/

    /*******************************
     * Optional Dependencies
     *******************************/

    /*******************************
     * Runtime Dependencies
     *******************************/

    /*******************************
     * Test Dependencies
     *******************************/

    testCompile(project(":genie-test"))
    testCompile("com.github.springtestdbunit:spring-test-dbunit:${spring_test_dbunit_version}")
    testCompile("com.jayway.jsonpath:json-path")
    testCompile("org.dbunit:dbunit:${dbunit_version}")
    testCompile("org.springframework.security:spring-security-test")
    testCompile("net.sf.jtidy:jtidy:${jtidy_version}")
}

license {
    excludes(["static/*", "*.yml", "genie-banner.txt"])
}

jar {
    manifest {
        attributes("Implementation-Version": version)
    }
}

processResources {
    from('src/main/resources') {
        include '**/*.properties'
        include '**/*.yml'
        filter ReplaceTokens, tokens: [
            "project.version": project.version.toString()
        ]
    }
}

node {
    version = '4.4.0'
    npmVersion = '3.8.6'
    download = true
}

task bundle(type: NpmTask) {
    args = ['run', 'bundle']
}

bundle.dependsOn(npm_install)

jar {
    dependsOn bundle

    from("${project.projectDir}/src/main/resources/static/build") {
        into 'static'
    }
}

